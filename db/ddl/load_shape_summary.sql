drop table LOAD_SHAPE_SUMMARY;

-- Create table
CREATE TABLE LOAD_SHAPE_SUMMARY 
   (OID 		NUMBER NOT NULL, 
	MP_OID 		NUMBER NOT NULL, 
	STATUS 		VARCHAR2(30), 
	LOAD_SHAPE_OID 	NUMBER NOT NULL,
	VERSION_NUM 	NUMBER(4),
    COMMENTS        VARCHAR2(400),
    AUDIT_DATETIME   DATE,
    AUDIT_USERID     VARCHAR2(20)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE LTLF_DATA ;

alter table LOAD_SHAPE_SUMMARY
  add constraint LOAD_SHAPE_SUMMARY_PK primary key (OID)
  using index
  tablespace LTLF_INDX;

CREATE INDEX LOAD_SHAPE_SUMMARY_IDX_1 ON LOAD_SHAPE_SUMMARY(MP_OID, VERSION_ID)
      TABLESPACE LTLF_INDX;


CREATE OR REPLACE TRIGGER LOAD_SHAPE_SUMM_BEFORE_INSERT 

BEFORE INSERT
    ON LOAD_SHAPE_SUMMARY
    FOR EACH ROW

DECLARE
   nOID number;
   nAUDIT_DATETIME DATE;

BEGIN
  IF :new.oid IS NULL THEN
     select LTLF_SEQ.NEXTVAL into nOID from dual;
     :new.oid := nOID;
  END IF;

   IF :new.AUDIT_DATETIME IS NULL THEN
     select SYSDATE into nAUDIT_DATETIME from dual;
     :new.AUDIT_DATETIME := nAUDIT_DATETIME;
  END IF;

   IF :new.AUDIT_USERID IS NULL THEN
     :new.AUDIT_USERID := 'sys';
  END IF;

END;
/
